#!/usr/bin/env python3
import rospy
from std_msgs.msg import Int32
import sys, select, termios, tty
import threading

rospy.init_node("robot_control_v2")
velocity_publisher = rospy.Publisher("/cmd_vel", Int32, queue_size=1)


def getKey(key_timeout=0.1):
    tty.setraw(sys.stdin.fileno())
    rlist, _, _ = select.select([sys.stdin], [], [], key_timeout)
    if rlist:
        key = sys.stdin.read(1)
    else:
        key = ''
    termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)
    return key

def control():
    rate = rospy.Rate(10)  # 10hz
    while not rospy.is_shutdown():
        string = "------ Controls ------\n1=Forward, 2=Backward, 3=Left, 4=Right, 5=Stop\nEnter: "
        velocity_logic = 'e'
        try:
            logic_list = {'w': 1, 's': 2, 'a': 3, 'd': 4, 'e': 5}
            print(string,end='')
            key= getKey(0.5)
            print(key)
            
            if key=='':
                continue
            
            if key in logic_list.keys():
                velocity_logic=key
                
            if velocity_logic not in logic_list.keys():
                raise Exception

            velocity_logic = logic_list[velocity_logic]
            
        except Exception as e:
            velocity_logic = 5  # stop
            print(e, "** exception, stopping robot **\n")

        velocity_publisher.publish(velocity_logic)
        rate.sleep()
        


if __name__ == '__main__':
    try:
        settings = termios.tcgetattr(sys.stdin)
        control()
        
    except rospy.ROSInterruptException or KeyboardInterrupt:
        print("Exited")
        pass

    finally:
        termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)
